diff -Naur gcc-3.4.4/config.sub gcc-3.4.4-new/config.sub
--- gcc-3.4.4/config.sub	2004-02-22 15:44:23.000000000 +0100
+++ gcc-3.4.4-new/config.sub	2006-03-01 00:56:26.000000000 +0100
@@ -1166,6 +1166,8 @@
 	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
+	-oomtk*)
+		;;
 	-qnx*)
 		case $basic_machine in
 		    x86-* | i*86-*)
diff -Naur gcc-3.4.4/gcc/config/i386/t-oomtk64 gcc-3.4.4-new/gcc/config/i386/t-oomtk64
--- gcc-3.4.4/gcc/config/i386/t-oomtk64	1970-01-01 01:00:00.000000000 +0100
+++ gcc-3.4.4-new/gcc/config/i386/t-oomtk64	2006-03-01 01:06:51.000000000 +0100
@@ -0,0 +1,20 @@
+# On x86-64 we do not need any exports for glibc for 64-bit libgcc_s,
+# override the settings
+# from t-slibgcc-elf-ver and t-linux
+SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver \
+                 $(srcdir)/config/i386/libgcc-x86_64-glibc.ver
+
+MULTILIB_OPTIONS = m64/m32
+MULTILIB_DIRNAMES = 64 32
+MULTILIB_OSDIRNAMES = ../lib64 ../lib
+
+LIBGCC = stmp-multilib
+INSTALL_LIBGCC = install-multilib
+
+EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o # crtbeginS.o crtendS.o crtbeginT.o
+
+# The pushl in CTOR initialization interferes with frame pointer elimination.
+# crtend*.o cannot be compiled without -fno-asynchronous-unwind-tables,
+# because then __FRAME_END__ might not be the last thing in .eh_frame
+# section.
+CRTSTUFF_T_CFLAGS = -fno-omit-frame-pointers -fno-asynchronous-unwind-tables
\ Без новог реда на крају датотеке
diff -Naur gcc-3.4.4/gcc/config/oomtk.h gcc-3.4.4-new/gcc/config/oomtk.h
--- gcc-3.4.4/gcc/config/oomtk.h	1970-01-01 01:00:00.000000000 +0100
+++ gcc-3.4.4-new/gcc/config/oomtk.h	2006-03-01 01:01:48.000000000 +0100
@@ -0,0 +1,33 @@
+/* Configuration common to all targets running OOMTK.
+   Copyright (C) 2000, 2002, 2004 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING.  If not, write to
+the Free Software Foundation, 59 Temple Place - Suite 330,
+Boston, MA 02111-1307, USA.  */
+
+/* Specify predefined symbols in preprocessor */
+
+#ifdef TARGET_OS_CPP_BUILTINS
+#undef TARGET_OS_CPP_BUILTINS
+#endif
+
+#define TARGET_OS_CPP_BUILTINS()                \
+  do                                            \
+    {                                           \
+      builtin_define ("__oomtk__");             \
+      builtin_assert ("system=oomtk");          \
+    }                                           \
+  while (0)
\ Без новог реда на крају датотеке
diff -Naur gcc-3.4.4/gcc/config/oomtk.h~ gcc-3.4.4-new/gcc/config/oomtk.h~
--- gcc-3.4.4/gcc/config/oomtk.h~	1970-01-01 01:00:00.000000000 +0100
+++ gcc-3.4.4-new/gcc/config/oomtk.h~	2006-03-01 00:59:06.000000000 +0100
@@ -0,0 +1,51 @@
+/* Configuration common to all targets running OOMTK.
+   Copyright (C) 2000, 2002, 2004 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING.  If not, write to
+the Free Software Foundation, 59 Temple Place - Suite 330,
+Boston, MA 02111-1307, USA.  */
+
+/* The system headers under RTEMS are C++-aware.  */
+#define NO_IMPLICIT_EXTERN_C
+
+/* Generate calls to memcpy, memcmp and memset.  */
+#ifndef TARGET_MEM_FUNCTIONS
+#define TARGET_MEM_FUNCTIONS
+#endif
+
+/*
+ * Dummy start/end specification to let linker work as
+ * needed by autoconf scripts using this compiler.
+ */
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC "crt0.o%s"
+
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC   ""
+
+/*
+ * Some targets do not set up LIB_SPECS, override it, here.
+ */
+#define STD_LIB_SPEC \
+  "%{!shared:%{g*:-lg} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}}"
+
+#undef LIB_SPEC
+#define LIB_SPEC "%{!qrtems: " STD_LIB_SPEC "} " \
+"%{!nostdlib: %{qrtems: --start-group \
+ %{!qrtems_debug: -lrtemsbsp -lrtemscpu} \
+ %{qrtems_debug: -lrtemsbsp_g -lrtemscpu_g} \
+ -lc -lgcc --end-group %{!qnolinkcmds: -T linkcmds%s}}}"
+
diff -Naur gcc-3.4.4/gcc/config.build gcc-3.4.4-new/gcc/config.build
--- gcc-3.4.4/gcc/config.build	2003-10-02 01:51:09.000000000 +0200
+++ gcc-3.4.4-new/gcc/config.build	2006-03-01 01:08:25.000000000 +0100
@@ -85,10 +85,14 @@
     build_xm_file=i386/xm-djgpp.h
     build_exeext=.exe
     ;;
-  i[34567]86-*-sco3.2v5*) 
+  i[34567]86-*-sco3.2v5*)
     # 80386 running SCO Open Server 5
     build_install_headers_dir=install-headers-cpio
     ;;
+  i[34567]86-*-oomtk*)
+    # 80386 running OOMTK
+    build_install_headers_dir=install-headers-cpio
+    ;;
   i[34567]86-sequent-ptx4* | i[34567]86-sequent-sysv4* )
     build_xm_defines="SMALL_ARG_MAX"
     build_install_headers_dir=install-headers-cpio
@@ -96,22 +100,22 @@
   i[34567]86-*-solaris2*)
     build_xm_defines="SMALL_ARG_MAX"
     ;;
-  i[34567]86-*-sysv4*) 
+  i[34567]86-*-sysv4*)
     # Intel x86 running system V r4
     build_xm_defines="SMALL_ARG_MAX"
     build_install_headers_dir=install-headers-cpio
     ;;
-  i[34567]86-*-udk*) 
+  i[34567]86-*-udk*)
     # Intel x86 on SCO UW/OSR5 Dev Kit
     build_install_headers_dir=install-headers-cpio
     ;;
   i[34567]86-*-uwin*)
     build_exeext=.exe
     ;;
-  i386-*-vsta) 
+  i386-*-vsta)
     # Intel 80386's running VSTa kernel
     ;;
-  m68000-hp-hpux* | m68k-hp-hpux*) 
+  m68000-hp-hpux* | m68k-hp-hpux*)
     # HP 9000 series 300
     build_install_headers_dir=install-headers-cpio
     ;;
diff -Naur gcc-3.4.4/gcc/config.gcc gcc-3.4.4-new/gcc/config.gcc
--- gcc-3.4.4/gcc/config.gcc	2005-04-25 06:47:59.000000000 +0200
+++ gcc-3.4.4-new/gcc/config.gcc	2006-03-01 01:13:33.000000000 +0100
@@ -427,7 +427,7 @@
           ;;
       esac
       ;;
-    *) 
+    *)
       echo 'Unknown thread configuration for FreeBSD'
       exit 1
       ;;
@@ -864,7 +864,7 @@
 	fi
 	case x${enable_threads} in
 	xyes | xposix )
-		thread_file=posix 
+		thread_file=posix
 		;;
 	esac
 	;;
@@ -874,7 +874,7 @@
 	tmake_file="pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib"
 	case x${enable_threads} in
 	xyes | xposix )
-		thread_file=posix 
+		thread_file=posix
 		;;
 	esac
 	use_collect2=yes
@@ -884,7 +884,7 @@
 	tmake_file="pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib"
 	case x${enable_threads} in
 	xyes | xposix )
-		thread_file=posix 
+		thread_file=posix
 		;;
 	esac
 	use_collect2=yes
@@ -910,6 +910,17 @@
 	tmake_file="t-slibgcc-elf-ver t-linux"
 	# broken_install=yes
 	;;
+i[34567]86-*-oomtk*)
+	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/i386elf.h oomtk.h"
+	extra_parts="crti.o crtn.o"
+	tmake_file="i386/t-i386elf t-svr4"
+	use_fixproto=yes
+	;;
+x86_64-*-oomtk*)
+	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/x86_64.h oomtk.h"
+	tmake_file="${tmake_file} i386/t-oomtk64"
+	use_fixproto=yes
+	;;
 i[34567]86-*-darwin*)
 	tm_file="${tm_file} i386/darwin.h"
 	;;
@@ -1572,7 +1583,7 @@
 	target_cpu_default="MASK_GAS|MASK_ABICALLS"
 	tm_file="mips/mips.h openbsd.h mips/openbsd.h mips/sdb.h"
 	case ${target} in
-	mips*el-*-openbsd*) 
+	mips*el-*-openbsd*)
 	    tm_defines="${tm_defines} TARGET_ENDIAN_DEFAULT=0";;
 	*)  tm_defines="${tm_defines} TARGET_ENDIAN_DEFAULT=MASK_BIG_ENDIAN";;
         esac
