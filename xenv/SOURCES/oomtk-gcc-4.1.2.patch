Patch to enable OOMTK support in Gcc-4.1.2
Index: gcc-4.1.2/config.sub
===================================================================
--- gcc-4.1.2.orig/config.sub
+++ gcc-4.1.2/config.sub
@@ -3,7 +3,7 @@
 #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
 #   2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
 
-timestamp='2005-12-06'
+timestamp='2007-11-11'
 
 # This file is (in principle) common to ALL GNU software.
 # The presence of a machine in this file suggests that SOME GNU software
@@ -120,7 +120,7 @@ esac
 maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
 case $maybe_os in
   nto-qnx* | linux-gnu* | linux-dietlibc | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | \
-  kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* | storm-chaos* | os2-emx* | rtmk-nova*)
+  kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* | storm-chaos* | os2-emx* | rtmk-nova* | oomtk*-gnu* )
     os=-$maybe_os
     basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
     ;;
@@ -1205,6 +1205,8 @@ case $os in
 	      | -skyos* | -haiku*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
+        -oomtk*)
+	        ;;
 	-qnx*)
 		case $basic_machine in
 		    x86-* | i*86-*)
Index: gcc-4.1.2/gcc/config.build
===================================================================
--- gcc-4.1.2.orig/gcc/config.build
+++ gcc-4.1.2/gcc/config.build
@@ -85,6 +85,9 @@ case $build in
     build_xm_file=i386/xm-djgpp.h
     build_exeext=.exe
     ;;
+  i[34567]87-*-oomtk*)
+    build_install_headers_dir=install-headers-cpio
+    ;;
   i[34567]86-*-sco3.2v5*) 
     # 80386 running SCO Open Server 5
     build_install_headers_dir=install-headers-cpio
Index: gcc-4.1.2/gcc/config.gcc
===================================================================
--- gcc-4.1.2.orig/gcc/config.gcc
+++ gcc-4.1.2/gcc/config.gcc
@@ -978,6 +978,25 @@ hppa[12]*-*-hpux11*)
 	use_collect2=yes
 	gas=yes
 	;;
+i[34567]86-*-oomtk* | i[34567]86-*-oomtk*-gnu*)
+	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/i386elf.h oomtk.h i386/oomtk.h"
+	extra_parts="crti.o crtn.o"
+	tmake_file="i386/t-i386elf t-svr4"
+	use_fixproto=yes
+	;;
+x86_64-*-oomtk* | x86_64-*-oomtk*-gnu*)
+	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/x86_64.h oomtk.h i386/oomtk.h"
+	tmake_file="${tmake_file} i386/t-oomtk64"
+	use_fixproto=yes
+	;;
+arm-*-oomtk* | arm-*-oomtk*-gnu*)
+	tm_file="dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h oomtk.h"
+	tmake_file=arm/t-arm-elf
+	use_fixprotos=yes
+	;;
+powerpc*-*-oomtk* | powerpc*-*-oomtk*-gnu*)
+	# All the configuration is presently done generically.
+	;;
 i[34567]86-*-darwin*)
 	# All the configuration is presently done generically.
 	;;
Index: gcc-4.1.2/gcc/config/i386/oomtk.h
===================================================================
--- /dev/null
+++ gcc-4.1.2/gcc/config/i386/oomtk.h
@@ -0,0 +1,32 @@
+/* Definitions for Intel 386 running OOMTK-based GNU systems with ELF format.
+   Copyright (C) 2007 Filip Brcic
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING.  If not, write to
+the Free Software Foundation, 51 Franklin Street, Fifth Floor,
+Boston, MA 02110-1301, USA.  */
+
+#undef TARGET_VERSION
+#define TARGET_VERSION fprintf (stderr, " (i386 OOMTK)");
+
+#define TARGET_OS_CPP_BUILTINS()		\
+    do {					\
+	OOMTK_TARGET_OS_CPP_BUILTINS();		\
+	if (flag_pic)				\
+	{					\
+	    builtin_define ("__PIC__");		\
+	    builtin_define ("__pic__");		\
+	}					\
+    } while (0)
Index: gcc-4.1.2/gcc/config/i386/t-oomtk64
===================================================================
--- /dev/null
+++ gcc-4.1.2/gcc/config/i386/t-oomtk64
@@ -0,0 +1,21 @@
+# On x86-64 we do not need any exports for glibc for 64-bit libgcc_s,
+# override the settings
+# from t-slibgcc-elf-ver and t-linux
+SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver \
+		 $(srcdir)/config/i386/libgcc-x86_64-glibc.ver
+
+MULTILIB_OPTIONS = m64/m32
+MULTILIB_DIRNAMES = 64 32 
+MULTILIB_OSDIRNAMES = ../lib64 ../lib
+
+LIBGCC = stmp-multilib
+INSTALL_LIBGCC = install-multilib
+
+EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o \
+		     crtbeginT.o crtfastmath.o
+
+# The pushl in CTOR initialization interferes with frame pointer elimination.
+# crtend*.o cannot be compiled without -fno-asynchronous-unwind-tables,
+# because then __FRAME_END__ might not be the last thing in .eh_frame
+# section.
+CRTSTUFF_T_CFLAGS = -fno-omit-frame-pointer -fno-asynchronous-unwind-tables
Index: gcc-4.1.2/gcc/config/oomtk.h
===================================================================
--- /dev/null
+++ gcc-4.1.2/gcc/config/oomtk.h
@@ -0,0 +1,93 @@
+/* Configuration common to all targets running OOMTK. 
+   Copyright (C) 2000, 2002, 2004 Free Software Foundation, Inc. 
+   Copyright (C) 2006, 2007 Filip Brcic
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING.  If not, write to
+the Free Software Foundation, 51 Franklin Street, Fifth Floor,
+Boston, MA 02110-1301, USA.  */
+
+/*
+ * Dummy start/end specification to let linker work as
+ * needed by autoconf scripts using this compiler.
+ */
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC "crt0.o%s"
+
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC   ""
+
+/*
+ * Some targets do not set up LIB_SPECS, override it, here.
+ */
+#define STD_LIB_SPEC "%{!shared:%{g*:-lg} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}}"
+
+#if 0
+#undef LIB_SPEC
+#define LIB_SPEC "%{!qoomtk: " STD_LIB_SPEC "} " \
+"%{!nostdlib: %{qoomtk: --start-group \
+ %{!qoomtk_debug: -loomtksys} \
+ %{qoomtk_debug: -loomtksys_g} \
+ -lc -lgcc --end-group %{!qnolinkcmds: -T linkcmds%s}}}"
+#endif
+
+/* Don't assume extern "C" for header files. */
+#define NO_IMPLICIT_EXTERN_C
+
+/* Move the standard include directory to /include */
+#undef STANDARD_INCLUDE_DIR
+#define STANDARD_INCLUDE_DIR "/include"
+
+/* Define builtins for OOMTK */
+#define OOMTK_TARGET_OS_CPP_BUILTINS()		\
+    do {					\
+	builtin_define ("__gnu_oomtk__");	\
+	builtin_define_std ("oomtk");		\
+	builtin_define_std ("unix");		\
+	builtin_assert ("system=oomtk");	\
+	builtin_assert ("system=unix");		\
+	builtin_assert ("system=posix");	\
+    } while (0)
+
+#undef ASM_APP_ON
+#define ASM_APP_ON "#APP\n"
+
+#undef ASM_APP_OFF
+#define ASM_APP_OFF "#NO_APP\n"
+
+#undef MD_EXEC_PREFIX
+#undef MD_STARTFILE_PREFIX
+
+/* Define _GNU_SOURCE for C++ standard library */
+#undef CPLUSPLUS_CPP_SPEC
+#define CPLUSPLUS_CPP_SPEC "-D_GNU_SOURCE %(cpp)"
+
+#if defined(HAVE_LD_EH_FRAME_HDR)
+#define LINK_EH_SPEC "%{!static:--eh-frame-hdr}"
+#endif
+
+#define LINK_GCC_C_SEQUENCE_SPEC \
+    "%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}"
+
+/* Use --as-needed -lgcc_s for eh support. */
+#ifdef HAVE_LD_AS_NEEDED
+#define USE_LD_AS_NEEDED 1
+#endif
+
+/* Determine whether the entire C99 runtime is present in the runtime
+   library. */
+#define TARGET_C99_FUNCTIONS 1
+
+#define TARGET_POSIX_IO
