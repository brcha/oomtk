#ifndef LIBCPP_TYPEINFO
#define LIBCPP_TYPEINFO

namespace std
{
	class type_info
	{
		public:
			/*! The == operator */
			inline bool operator == (const type_info &t) const{return (this == &t);}
			/*! The != operator */
			inline bool operator != (const type_info &t) const{return (this == &t);}
			/*!\todo */
			bool before(const type_info &) const;
			/*! Get the class name */
			inline const char* name() const{return _name;}
			/*! The destructor */
			virtual ~type_info();
		protected:
			/*! The constructor */
			explicit type_info(const char *n): _name(n){}
			/*! The constructor */
			inline type_info(){}
			/*! The copy-constructor  */
			type_info(const type_info &rhs);
		private:
			/*! The type name */
			const char *_name;
			/*! The = operator */
			type_info &operator = (const type_info &rhs);
	};
};

#endif
